(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{403:function(s,a,t){"use strict";t.r(a);var e=t(10),v=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"ssh-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-介绍"}},[s._v("#")]),s._v(" SSH 介绍")]),s._v(" "),t("p",[s._v("SSH（Secure Shell 的缩写）是一种网络协议，用于加密两台计算机之间的通信，并且支持各种身份验证机制。它主要用于保证远程登录和远程通信的安全，任何网络服务都可以用这个协议来加密。")]),s._v(" "),t("p",[s._v("网络主机之间的通信是不加密的，属于明文通信。这使得通信很不安全，一个典型的例子就是服务器登录。登录远程服务器的时候，需要将用户输入的密码传给服务器，如果这个过程是明文通信，就意味着传递过程中，线路经过的中间计算机都能看到密码，这是很可怕的。\nSSH 就是为了解决这个问题而诞生的，它能够加密计算机之间的通信，保证不被窃听或篡改。它还能对操作者进行认证（authentication）和授权（authorization）。明文的网络协议可以套用在它里面，从而实现加密。")]),s._v(" "),t("p",[s._v("SSH之所以能够保证安全，原因在于它采用了公钥加密。\n整个过程是这样的：（1）远程主机收到用户的登录请求，把自己的公钥发给用户。（2）用户使用这个公钥，将登录密码加密后，发送回来。（3）远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。")]),s._v(" "),t("h2",{attrs:{id:"ssh-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-架构"}},[s._v("#")]),s._v(" SSH 架构")]),s._v(" "),t("p",[s._v("SSH 的软件架构是服务器-客户端模式（Server - Client）。在这个架构中，SSH 软件分成两个部分：向服务器发出请求的部分，称为客户端（client），OpenSSH 的实现为 ssh；接收客户端发出的请求的部分，称为服务器（server），OpenSSH 的实现为 sshd。")]),s._v(" "),t("h3",{attrs:{id:"ssh-客户端-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-客户端-client"}},[s._v("#")]),s._v(" SSH 客户端（Client）")]),s._v(" "),t("p",[s._v("penSSH 的客户端是二进制程序 ssh。它在 Linux/Unix 系统的位置是"),t("code",[s._v("/usr/local/bin/ssh")]),s._v("，Windows 系统的位置是"),t("code",[s._v("\\Program Files\\OpenSSH\\bin\\ssh.exe")]),s._v("。")]),s._v(" "),t("p",[s._v("Linux 系统一般都自带 ssh，如果没有就需要安装。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Ubuntu 和 Debian")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-client\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CentOS 和 Fedora")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dnf "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-clients\n")])])]),t("p",[s._v("安装以后，可以使用"),t("code",[s._v("-V")]),s._v("参数输出版本号，查看一下是否安装成功。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -V\n")])])]),t("h3",{attrs:{id:"ssh-服务端-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-服务端-server"}},[s._v("#")]),s._v(" SSH 服务端（Server）")]),s._v(" "),t("p",[s._v("OpenSSH 的客户端软件是 ssh，服务器软件是 sshd。\n如果没有安装 sshd，可以用下面的命令安装。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Debian")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("aptitude")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Red Hat")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\n")])])]),t("p",[s._v("一般来说，sshd 安装后会跟着系统一起启动。如果当前 sshd 没有启动，可以用下面的命令启动。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ sshd\n")])])]),t("p",[s._v("上面的命令运行后，如果提示“sshd re-exec requires execution with an absolute path”，就需要使用绝对路径来启动。这是为了防止有人出于各种目的，放置同名软件在"),t("code",[s._v("$PATH")]),s._v("变量指向的目录中，代替真正的 sshd。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Centos、Ubuntu、OS X")]),s._v("\n$ /usr/sbin/sshd\n")])])]),t("p",[s._v("上面的命令运行以后，sshd 自动进入后台，所以命令后面不需要加上"),t("code",[s._v("&")]),s._v("。")]),s._v(" "),t("p",[s._v("除了直接运行可执行文件，也可以通过 Systemd 启动 sshd。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start sshd.service\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl stop sshd.service\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart sshd.service\n")])])]),t("p",[s._v("下面的命令让 sshd 在计算机下次启动时自动运行。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" sshd.service\n")])])]),t("h2",{attrs:{id:"ssh-用途"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-用途"}},[s._v("#")]),s._v(" SSH 用途")]),s._v(" "),t("ol",[t("li",[s._v("登录服务器")]),s._v(" "),t("li",[s._v("SSH 隧道（tunnel）- 又称 端口转发")])]),s._v(" "),t("h3",{attrs:{id:"_1-登录服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-登录服务器"}},[s._v("#")]),s._v(" 1. 登录服务器")]),s._v(" "),t("p",[s._v("方式分为：密码登录、密钥登录、证书登录")]),s._v(" "),t("h4",{attrs:{id:"_1-1-密码登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-密码登录"}},[s._v("#")]),s._v(" 1.1 密码登录")]),s._v(" "),t("p",[s._v("ssh 登录服务器的命令如下。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v("\n")])])]),t("p",[s._v("上面命令中，"),t("code",[s._v("hostname")]),s._v("是主机名，它可以是域名，也可能是 IP 地址或局域网内部的主机名。不指定用户名的情况下，将使用客户端的当前用户名，作为远程服务器的登录用户名。如果要指定用户名，可以采用下面的语法。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" user@hostname\n")])])]),t("p",[s._v("上面的命令中，用户名和主机名写在一起了，之间使用"),t("code",[s._v("@")]),s._v("分隔。")]),s._v(" "),t("p",[s._v("用户名也可以使用"),t("code",[s._v("ssh")]),s._v("的"),t("code",[s._v("-l")]),s._v("参数指定，这样的话，用户名和主机名就不用写在一起了。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -l username "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n")])])]),t("p",[s._v("ssh 默认连接服务器的22端口，"),t("code",[s._v("-p")]),s._v("参数可以指定其他端口。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8821")]),s._v(" foo.com\n")])])]),t("p",[s._v("上面命令连接服务器"),t("code",[s._v("foo.com")]),s._v("的8821端口。")]),s._v(" "),t("h4",{attrs:{id:"_1-2-密钥登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-密钥登录"}},[s._v("#")]),s._v(" 1.2 密钥登录")]),s._v(" "),t("p",[s._v("SSH 密钥登录分为以下的步骤。")]),s._v(" "),t("p",[s._v("预备步骤，客户端通过"),t("code",[s._v("ssh-keygen")]),s._v("生成自己的公钥和私钥。")]),s._v(" "),t("p",[s._v("第一步，手动将客户端的公钥放入远程服务器的指定位置(OpenSSH 规定，用户公钥保存在服务器的"),t("code",[s._v("~/.ssh/authorized_keys")]),s._v("文件)。")]),s._v(" "),t("p",[s._v("第二步，客户端向服务器发起 SSH 登录的请求("),t("code",[s._v("ssh remoteHost")]),s._v(")。")]),s._v(" "),t("p",[s._v("第三步，服务器收到用户 SSH 登录的请求，发送一些随机数据给用户，要求用户证明自己的身份。")]),s._v(" "),t("p",[s._v("第四步，客户端收到服务器发来的数据，使用私钥对数据进行签名，然后再发还给服务器。")]),s._v(" "),t("p",[s._v("第五步，服务器收到客户端发来的加密签名后，使用对应的公钥解密，然后跟原始数据比较。如果一致，就允许用户登录。")]),s._v(" "),t("h4",{attrs:{id:"_1-3-证书登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-证书登录"}},[s._v("#")]),s._v(" 1.3 证书登录")]),s._v(" "),t("p",[s._v("证书登录引入了一个证书颁发机构（Certificate Authority，简称 CA），对信任的服务器颁发服务器证书，对信任的用户颁发用户证书。\n登录时，用户和服务器不需要提前知道彼此的公钥，只需要交换各自的证书，验证是否可信即可。")]),s._v(" "),t("p",[s._v("证书登录的主要优点有两个：（1）用户和服务器不用交换公钥，这更容易管理，也具有更好的可扩展性。（2）证书可以设置到期时间，而公钥没有到期时间。针对不同的情况，可以设置有效期很短的证书，进一步提高安全性。")]),s._v(" "),t("p",[s._v("SSH 证书登录之前，如果还没有证书，需要生成证书。具体方法是：（1）用户和服务器都将自己的公钥，发给 CA；（2）CA 使用服务器公钥，生成服务器证书，发给服务器；（3）CA 使用用户的公钥，生成用户证书，发给用户。")]),s._v(" "),t("p",[s._v("有了证书以后，用户就可以登录服务器了。整个过程都是 SSH 自动处理，用户无感知。")]),s._v(" "),t("p",[s._v("第一步，用户登录服务器时，SSH 自动将用户证书发给服务器。")]),s._v(" "),t("p",[s._v("第二步，服务器检查用户证书是否有效，以及是否由可信的 CA 颁发。证实以后，就可以信任用户。")]),s._v(" "),t("p",[s._v("第三步，SSH 自动将服务器证书发给用户。")]),s._v(" "),t("p",[s._v("第四步，用户检查服务器证书是否有效，以及是否由信任的 CA 颁发。证实以后，就可以信任服务器。")]),s._v(" "),t("p",[s._v("第五步，双方建立连接，服务器允许用户登录。")]),s._v(" "),t("h3",{attrs:{id:"_2-ssh-隧道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-ssh-隧道"}},[s._v("#")]),s._v(" 2. SSH 隧道")]),s._v(" "),t("h4",{attrs:{id:"_2-1-本地转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-本地转发"}},[s._v("#")]),s._v(" 2.1 本地转发")]),s._v(" "),t("p",[s._v("本地转发（local forwarding）指的是，SSH 服务器作为中介的跳板机，建立本地计算机与特定目标网站之间的加密连接。本地转发是在本地计算机的 SSH 客户端建立的转发规则。")]),s._v(" "),t("p",[s._v("它会指定一个本地端口（local-port），所有发向那个端口的请求，都会转发到 SSH 跳板机（tunnel-host），然后 SSH 跳板机作为中介，将收到的请求发到目标服务器（target-host）的目标端口（target-port）。")]),s._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[s._v("$ ssh -L local-port:target-host:target-port tunnel-host\n")])])]),t("p",[s._v("上面命令中，"),t("code",[s._v("-L")]),s._v("参数表示本地转发，"),t("code",[s._v("local-port")]),s._v("是本地端口，"),t("code",[s._v("target-host")]),s._v("是你想要访问的目标服务器，"),t("code",[s._v("target-port")]),s._v("是目标服务器的端口，"),t("code",[s._v("tunnel-host")]),s._v("是 SSH 跳板机。\n如果经常使用本地转发，可以将设置写入 SSH 客户端的用户个人配置文件（"),t("code",[s._v("~/.ssh/config")]),s._v("）。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Host test.example.com\nLocalForward client-IP:client-port server-IP:server-port\n")])])]),t("h4",{attrs:{id:"_2-2-远程转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-远程转发"}},[s._v("#")]),s._v(" 2.2 远程转发")]),s._v(" "),t("p",[s._v("程端口指的是在远程 SSH 服务器建立的转发规则。")]),s._v(" "),t("p",[s._v("这种场景比较特殊，主要针对内网的情况。本地计算机在外网，SSH 跳板机和目标服务器都在内网，而且本地计算机无法访问内网之中的 SSH 跳板机，但是 SSH 跳板机可以访问本机计算机。")]),s._v(" "),t("p",[s._v("由于本机无法访问内网 SSH 跳板机，就无法从外网发起 SSH 隧道，建立端口转发。必须反过来，从 SSH 跳板机发起隧道，建立端口转发，这时就形成了远程端口转发。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -R local-port:target-host:target-port -N "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n")])])]),t("p",[s._v("上面的命令，首先需要注意，不是在本机执行的，而是在 SSH 跳板机执行的，从跳板机去连接本地计算机。"),t("code",[s._v("-R")]),s._v("参数表示远程端口转发，"),t("code",[s._v("local-port")]),s._v("是本地计算机的端口，"),t("code",[s._v("target-host")]),s._v("和"),t("code",[s._v("target-port")]),s._v("是目标服务器及其端口，"),t("code",[s._v("local")]),s._v("是本地计算机。")]),s._v(" "),t("p",[s._v("显然，远程端口转发要求本地计算机也安装了 SSH 服务器，这样才能接受 SSH 跳板机的远程登录。")]),s._v(" "),t("h4",{attrs:{id:"_2-3-动态转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-动态转发"}},[s._v("#")]),s._v(" 2.3 动态转发")]),s._v(" "),t("p",[s._v("动态转发指的是，本机与 SSH 服务器之间创建了一个加密连接，然后本机内部针对某个端口的通信，都通过这个加密连接转发。它的一个使用场景就是，访问所有外部网站，都通过 SSH 转发。")]),s._v(" "),t("p",[s._v("动态转发需要把本地端口绑定到 SSH 服务器。至于 SSH 服务器要去访问哪一个网站，完全是动态的，取决于原始通信，所以叫做动态转发。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -D local-port tunnel-host -N\n")])])]),t("p",[s._v("上面命令中，"),t("code",[s._v("-D")]),s._v("表示动态转发，"),t("code",[s._v("local-port")]),s._v("是本地端口，"),t("code",[s._v("tunnel-host")]),s._v("是 SSH 服务器，"),t("code",[s._v("-N")]),s._v("表示这个 SSH 连接只进行端口转发，不登录远程 Shell，不能执行远程命令，只能充当隧道。")]),s._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")])])}),[],!1,null,null,null);a.default=v.exports}}]);